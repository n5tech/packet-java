/*
 * @author Jeevanandam M. (https://github.com/jeevatkm)
 * @date Jul 30, 2016
 */

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

ext {
    javaVersion = 1.7
}

repositories {
    mavenCentral()
}

group = 'net.packet'
version = '1.0.0'
sourceCompatibility = javaVersion

// Project dependencies
dependencies {
    compile ('org.apache.httpcomponents:httpclient:4.5.2') {
        exclude group:'commons-logging'
    }
    
    compile (
        'org.apache.commons:commons-lang3:3.4',
        'com.google.code.gson:gson:2.7',
        'org.slf4j:slf4j-api:1.7.21',
        'org.slf4j:jcl-over-slf4j:1.7.21',
    )

    // tests
    testCompile 'junit:junit:4.12'
}

// Project tasks
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// Artifacts
jar {
    baseName = 'java-client'
}
archivesBaseName = jar.baseName
artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

// Eclipse JDK selection
afterEvaluate {
    eclipse.classpath {
        downloadSources = true
        def containerPrefix = 'org.eclipse.jdt.launching.JRE_CONTAINER'
        containers.removeAll {
            it.startsWith(containerPrefix)
        }
        containers "${containerPrefix}/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-${javaVersion}"
    }
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Equinix Metal API Java Client'
        packaging 'jar'
        description 'Lightweight Java Client library for accessing Equinix Metal REST APIs with project based (JVM hosted languages) on Java, Groovy, Scala, Clojure, etc.'
        url 'https://github.com/packethost/packet-java'

        scm {
          connection 'scm:git:git@github.com:packethost/packet-java.git'
          developerConnection 'scm:git:git@github.com:packethost/packet-java.git'
          url 'git@github.com:packethost/packet-java.git'
        }

        licenses {
          license {
            name 'The MIT License (MIT)'
            url 'https://github.com/packethost/packet-java/blob/master/LICENSE'
          }
        }

        developers {
          developer {
            id 'jeevatkm'
            name 'Jeevanandam M.'
            email 'jeeva@myjeeva.com'
          }
        }
      }
    }
  }
}
